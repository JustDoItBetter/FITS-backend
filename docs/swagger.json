{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "FITS (Flexible IT Training System) Backend API for managing students, teachers, and signing requests with full authentication",
        "title": "FITS Backend API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@fits.example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/v1/admin/invite": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create invitation link for student or teacher (Admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invitations"
                ],
                "summary": "Create invitation",
                "parameters": [
                    {
                        "description": "Invitation data",
                        "name": "invitation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_auth.CreateInvitationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_domain_auth.CreateInvitationResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Authenticate with username and password, returns access and refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_domain_auth.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Logout user by invalidating all refresh tokens",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "description": "Get a new access token using a refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "refresh",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_auth.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_domain_auth.LoginResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/bootstrap/init": {
            "post": {
                "description": "Generates admin RSA keypair and returns admin token. Can only be called once.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bootstrap"
                ],
                "summary": "Initialize admin certificate",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_domain_auth.BootstrapResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/invite/{token}": {
            "get": {
                "description": "Get invitation information by token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invitations"
                ],
                "summary": "Get invitation details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invitation token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_domain_auth.InvitationResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/invite/{token}/complete": {
            "post": {
                "description": "Complete user registration with username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "invitations"
                ],
                "summary": "Complete invitation",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invitation token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_auth.CompleteInvitationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/signing/sign_requests": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve all pending sign requests as a parquet file",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "signing"
                ],
                "summary": "Get pending sign requests",
                "responses": {
                    "200": {
                        "description": "Parquet file with pending sign requests",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/signing/sign_uploads": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload a parquet file containing signed requests",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signing"
                ],
                "summary": "Upload signed requests",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Parquet file with signed requests",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/signing/upload": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Upload a parquet file containing student data",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "signing"
                ],
                "summary": "Upload parquet file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Parquet file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_domain_signing.UploadRecord"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "501": {
                        "description": "Not Implemented",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/student": {
            "get": {
                "description": "Retrieves a paginated list of students. Supports page and limit query parameters.\nDefault: page=1, limit=20. Maximum limit is 100 to prevent performance issues.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "List students with pagination",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Items per page (default: 20, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of students with metadata",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_pagination.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/internal_domain_student.Student"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new student record. Requires admin role. Email must be unique.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Create a new student",
                "parameters": [
                    {
                        "description": "Student creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_student.CreateStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Student created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_domain_student.Student"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - requires admin role",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict - email already exists",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation error - invalid field values",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/student/{uuid}": {
            "get": {
                "description": "Retrieves detailed information about a specific student by their UUID. Public endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Get student by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000",
                        "description": "Student UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_domain_student.Student"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Student not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing student's information. Requires admin role. Supports partial updates.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Update student information",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000",
                        "description": "Student UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Student update request (partial updates supported)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_student.UpdateStudentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_domain_student.Student"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or UUID",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - requires admin role",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Student not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict - email already exists",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation error - invalid field values",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Permanently deletes a student from the system (soft delete). Requires admin role.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Students"
                ],
                "summary": "Delete a student",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440000",
                        "description": "Student UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Student deleted successfully (no content)"
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - requires admin role",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Student not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/teacher": {
            "get": {
                "description": "Retrieves a paginated list of teachers. Supports page and limit query parameters.\nDefault: page=1, limit=20. Maximum limit is 100 to prevent performance issues.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "List teachers with pagination",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Items per page (default: 20, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of teachers with metadata",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_pagination.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/internal_domain_teacher.Teacher"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new teacher record. Requires admin role. Email must be unique. Department is required.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Create a new teacher",
                "parameters": [
                    {
                        "description": "Teacher creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_teacher.CreateTeacherRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Teacher created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_domain_teacher.Teacher"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - requires admin role",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict - email already exists",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation error - invalid field values",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/teacher/{uuid}": {
            "get": {
                "description": "Retrieves detailed information about a specific teacher by their UUID. Public endpoint.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Get teacher by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440010",
                        "description": "Teacher UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Teacher found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_domain_teacher.Teacher"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Teacher not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates an existing teacher's information. Requires admin role. Supports partial updates including department changes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Update teacher information",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440010",
                        "description": "Teacher UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Teacher update request (partial updates supported)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_domain_teacher.UpdateTeacherRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Teacher updated successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/internal_domain_teacher.Teacher"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or UUID",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - requires admin role",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Teacher not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict - email already exists",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Validation error - invalid field values",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Permanently deletes a teacher from the system (soft delete). Requires admin role.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teachers"
                ],
                "summary": "Delete a teacher",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "example": "550e8400-e29b-41d4-a716-446655440010",
                        "description": "Teacher UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Teacher deleted successfully (no content)"
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid token",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden - requires admin role",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Teacher not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_JustDoItBetter_FITS-backend_internal_common_pagination.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "limit": {
                    "type": "integer",
                    "example": 20
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "total_count": {
                    "type": "integer",
                    "example": 150
                },
                "total_pages": {
                    "type": "integer",
                    "example": 8
                }
            }
        },
        "github_com_JustDoItBetter_FITS-backend_internal_common_response.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "details": {
                    "type": "string",
                    "example": "field validation failed"
                },
                "error": {
                    "type": "string",
                    "example": "invalid request"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "github_com_JustDoItBetter_FITS-backend_internal_common_response.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "operation successful"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "internal_domain_auth.BootstrapResponse": {
            "description": "Admin bootstrap response",
            "type": "object",
            "properties": {
                "admin_token": {
                    "type": "string",
                    "example": "eyJhbGc..."
                },
                "message": {
                    "type": "string",
                    "example": "Admin certificate generated successfully"
                },
                "public_key_path": {
                    "type": "string",
                    "example": "./configs/keys/admin.pub"
                }
            }
        },
        "internal_domain_auth.CompleteInvitationRequest": {
            "description": "Complete invitation with credentials",
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "SecurePassword123!"
                },
                "username": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "max.mustermann"
                }
            }
        },
        "internal_domain_auth.CreateInvitationRequest": {
            "description": "Create invitation for new user",
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "role"
            ],
            "properties": {
                "department": {
                    "description": "Required for teachers",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "IT"
                },
                "email": {
                    "type": "string",
                    "example": "max@example.com"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Max"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Mustermann"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "student",
                        "teacher"
                    ],
                    "example": "student"
                },
                "teacher_uuid": {
                    "description": "Required for students",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "internal_domain_auth.CreateInvitationResponse": {
            "description": "Created invitation with link",
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string",
                    "example": "2025-10-25T12:00:00Z"
                },
                "invitation_link": {
                    "type": "string",
                    "example": "https://fits.example.com/invite/eyJhbGc..."
                },
                "invitation_token": {
                    "type": "string",
                    "example": "eyJhbGc..."
                }
            }
        },
        "internal_domain_auth.InvitationResponse": {
            "description": "Invitation information",
            "type": "object",
            "properties": {
                "department": {
                    "type": "string",
                    "example": "IT"
                },
                "email": {
                    "type": "string",
                    "example": "max@example.com"
                },
                "expires_at": {
                    "type": "string",
                    "example": "2025-10-25T12:00:00Z"
                },
                "first_name": {
                    "type": "string",
                    "example": "Max"
                },
                "last_name": {
                    "type": "string",
                    "example": "Mustermann"
                },
                "role": {
                    "type": "string",
                    "example": "student"
                },
                "teacher_uuid": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "internal_domain_auth.LoginRequest": {
            "description": "Login credentials",
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "SecurePassword123!"
                },
                "username": {
                    "type": "string",
                    "minLength": 3,
                    "example": "max.mustermann"
                }
            }
        },
        "internal_domain_auth.LoginResponse": {
            "description": "Login response with tokens",
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGc..."
                },
                "expires_in": {
                    "description": "Seconds",
                    "type": "integer",
                    "example": 3600
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGc..."
                },
                "role": {
                    "type": "string",
                    "example": "student"
                },
                "token_type": {
                    "type": "string",
                    "example": "Bearer"
                },
                "user_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "internal_domain_auth.RefreshTokenRequest": {
            "description": "Refresh token request",
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGc..."
                }
            }
        },
        "internal_domain_signing.UploadRecord": {
            "description": "File upload record information",
            "type": "object",
            "properties": {
                "content_hash": {
                    "type": "string",
                    "example": "sha256:abc123..."
                },
                "file_name": {
                    "type": "string",
                    "example": "report.parquet"
                },
                "file_size": {
                    "type": "integer",
                    "example": 1024000
                },
                "student_uuid": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "upload_id": {
                    "type": "string",
                    "example": "upload-123-456"
                },
                "uploaded_at": {
                    "type": "integer",
                    "example": 1727697600000
                }
            }
        },
        "internal_domain_student.CreateStudentRequest": {
            "description": "Request body for creating a new student",
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "max@example.com"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Max"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Mustermann"
                },
                "teacher_id": {
                    "description": "Optional - can be assigned later",
                    "type": "string",
                    "example": "teacher-uuid-123"
                }
            }
        },
        "internal_domain_student.Student": {
            "description": "Student information",
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "uuid"
            ],
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-09-30T12:00:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "max@example.com"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Max"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Mustermann"
                },
                "teacher_id": {
                    "description": "Optional - can be NULL",
                    "type": "string",
                    "example": "teacher-uuid-123"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-09-30T12:00:00Z"
                },
                "uuid": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "internal_domain_student.UpdateStudentRequest": {
            "description": "Request body for updating a student",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "moritz@example.com"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Moritz"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Schmidt"
                },
                "teacher_id": {
                    "type": "string",
                    "example": "teacher-uuid-456"
                }
            }
        },
        "internal_domain_teacher.CreateTeacherRequest": {
            "description": "Request body for creating a new teacher",
            "type": "object",
            "required": [
                "department",
                "email",
                "first_name",
                "last_name"
            ],
            "properties": {
                "department": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Computer Science"
                },
                "email": {
                    "type": "string",
                    "example": "anna@example.com"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Anna"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Schmidt"
                }
            }
        },
        "internal_domain_teacher.Teacher": {
            "description": "Teacher information",
            "type": "object",
            "required": [
                "department",
                "email",
                "first_name",
                "last_name",
                "uuid"
            ],
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-09-30T12:00:00Z"
                },
                "department": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Computer Science"
                },
                "email": {
                    "type": "string",
                    "example": "anna@example.com"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Anna"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Schmidt"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2025-09-30T12:00:00Z"
                },
                "uuid": {
                    "type": "string",
                    "example": "teacher-uuid-123"
                }
            }
        },
        "internal_domain_teacher.UpdateTeacherRequest": {
            "description": "Request body for updating a teacher",
            "type": "object",
            "properties": {
                "department": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Mathematics"
                },
                "email": {
                    "type": "string",
                    "example": "maria@example.com"
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Maria"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "Müller"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Bearer token authentication. Format: \"Bearer {token}\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}